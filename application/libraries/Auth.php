<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Auth {    protected $CI;    function __construct() {        $this->CI = & get_instance();    }    function is_logged_in() {        $is_logged_in = $this->CI->session->userdata('is_logged_in');        if (!isset($is_logged_in) || $is_logged_in != TRUE) {            redirect(base_url(), 'location');        }        return true;    }    function check_accessibility($role = NULL) {        if ($this->is_logged_in() and $role != NULL) {            $session_role = $this->CI->session->userdata('role');            if ($session_role == $role) {                return true;            } else {                redirect(base_url(), 'location');            }        }    }    function login_page() {        $is_logged_in = $this->CI->session->userdata('is_logged_in');        if ($is_logged_in) {            return true;        } else {            return false;        }    }    function fill_user_session($info) {// info as object not array        $session_data = array(            'user_id' => $info->id,            'username' => $info->username,            'user_type' => $info->user_type,            'picture' => !empty($info->picture) ? $info->picture : 'avatar.png',            'role' => 'user',            'is_logged_in' => TRUE        );        $this->CI->session->set_userdata($session_data);    }    function fill_admin_session($info) {// info as object not array        $session_data = array(            'user_id' => $info->id,            'picture' => 'avatar.png',            'username' => $info->username,            'role' => 'admin',            'is_logged_in' => TRUE        );        $this->CI->session->set_userdata($session_data);    }    function logout() {        $this->CI->session->sess_destroy();        redirect(base_url('home'), 'location');    }    public function encrypt($plainText) {        return md5($this->CI->config->item('salt') . $plainText);    }    public function remove_file($file_path = NULL, $file_name = NULL) {        if ($file_name != null and file_exists($file_path . $file_name)) {            unlink($file_path . $file_name);        }    }}/* End of custom library, Auth.php */